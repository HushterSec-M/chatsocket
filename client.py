import socket                                                           #подключаем сокеты
import threading                                                        #подключаем многопоточность
def read_sok():                                                         #функция, которая будет читать данные(если таковы имеются) и выводить на экран
     while 1:                                                           #бесконечный цикл (1)
         data = sor.recv(1024)                                          #забираем с сервера последние 1024 байта
         print(data.decode('utf-8'))                                    #выводим полученную информацию
server = '192.168.43.3', 5000                                           #данные сервера. Тут всё так же как и в server.py из строки 6
name = input("Name >>> ")                                               #имя пользователя
sor = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)                   #создаём сокет как и в server.py
sor.bind(('', 0))                                                       #пустые ковычки означают, что привязываем мы данный сокет ко всем возможным соединениям
sor.sendto((name+' connect [+]').encode('utf-8'), server)               #отображаем у всех пользователей, что кто-то подключился
thrd = threading.Thread(target=read_sok)                                #создаём поток, параллельный основному течению программы
thrd.start()                                                            #запускаем поток
while 1:                                                                #бесконечный цикл (2)
    mes = input("")                                                     #поле для ввода сообщений
    if mes != "":                                                       #чтобы не засорять пустыми сообщениями чат, то не будем ничего выводить при попытке отправить пустое сообщение
        sor.sendto((f"\t[{name}] : {mes}").encode('utf-8'), server)     #выводим сообщение и от кого оно в виде [Имя] : сообщение

#Потоки позволяют запустить (1) и (2) одновременно, тоесть мы постоянно и параллельно можем и читать, и отправлять
